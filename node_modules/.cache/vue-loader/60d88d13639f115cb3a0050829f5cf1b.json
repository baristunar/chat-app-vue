{"remainingRequest":"/home/btunar/Desktop/chat-app-vue/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/btunar/Desktop/chat-app-vue/src/components/chatSection.vue?vue&type=style&index=0&id=1172180d&scoped=true&lang=css","dependencies":[{"path":"/home/btunar/Desktop/chat-app-vue/src/components/chatSection.vue","mtime":1610107628930},{"path":"/home/btunar/Desktop/chat-app-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/btunar/Desktop/chat-app-vue/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/btunar/Desktop/chat-app-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/btunar/Desktop/chat-app-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/btunar/Desktop/chat-app-vue/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50ZXh0LWNvbG9yLWJsYWNrIHsKICBjb2xvcjogYmxhY2s7Cn0K"},{"version":3,"sources":["/home/btunar/Desktop/chat-app-vue/src/components/chatSection.vue"],"names":[],"mappings":";AA6GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACd","file":"/home/btunar/Desktop/chat-app-vue/src/components/chatSection.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"card mr-10\">\n    <ul class=\"messages\" ref=\"container\">\n      <li\n        :class=\"{ 'current-user': userInfo[0].userID == i.userID }\"\n        v-for=\"i in chatLog\"\n        :key=\"i\"\n        class=\"text-color-black\"\n      >\n        {{ i.mesaj }}\n        <small>{{ i.time }}</small>\n      </li>\n    </ul>\n    <div class=\"text-container d-flex justify-content-start align-items-start\">\n      <input @keypress.enter=\"sendMessage\" v-model=\"message\" type=\"text\" />\n      <button :disabled=\"isDisable\" class=\"btn-primary\" @click=\"sendMessage\">\n        Send\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  props: [\"userInfo\", \"changeToUser\"],\n  data() {\n    return {\n      chatLog: [],\n      message: \"\",\n    };\n  },\n\n  methods: {\n    addZero(i) {\n      if (i < 10) {\n        i = \"0\" + i;\n      }\n      return i;\n    },\n    scrollToEnd() {\n      let content = this.$refs.container;\n      content.scrollTop = content.scrollHeight;\n    },\n    sendMessage() {\n      const currentTime = new Date();\n      const currentHour = this.addZero(currentTime.getHours());\n      const currentMinute = this.addZero(currentTime.getMinutes());\n\n      while (this.message !== \"\") {\n        let chat = {\n          userID: this.userInfo[0].userID,\n          mesaj: this.message,\n          to: this.changeToUser.userID,\n          time: currentHour +\":\"+currentMinute\n        };\n        this.message = \"\";\n\n        axios\n          .post(\"http://localhost:3000/chat\", chat)\n          .then((save_message) => {\n            console.log(\"save_message\", save_message);\n            this.chatLog.push(save_message.data);\n          })\n          .catch((e) => {\n            console.log(\"e \", e);\n          });\n        console.log(chat);\n      }\n    },\n  },\n  computed: {\n    isDisable() {\n      return this.message == \"\" ? true : false;\n    },\n  },\n\n  updated() {\n    this.scrollToEnd();\n  },\n  mounted() {\n    this.scrollToEnd();\n  },\n  watch: {\n    changeToUser() {\n      axios\n        .get(\n          \"http://localhost:3000/chat?userID=\" +\n            this.userInfo[0].userID +\n            \"&to=\" +\n            this.changeToUser.userID +\n            \"&to=\" +\n            this.userInfo[0].userID +\n            \"&userID=\" +\n            this.changeToUser.userID\n        )\n        .then((response) => {\n          console.log(\"response chat\", response);\n          this.chatLog = [];\n          this.chatLog.push(...response.data);\n        })\n        .catch((e) => {\n          console.log(\"e\", e);\n        });\n    },\n  },\n};\n</script>\n<style scoped>\n.text-color-black {\n  color: black;\n}\n</style>\n"]}]}